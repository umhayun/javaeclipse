데이터베이스의 목적
1. 데이터의 효율적인 검색과 수정
2. 데이터 중복의 최소화
3. 데이터의 일관성 유지
4. 다수 사용자와의 데이터의 효율적인 공유
5. 데이터의 논리적, 물리적 독립성 유지

DBMS Database Management System - 데이터베이스를 효율적으로 관리하기 위한 시스템
현재는 관계형 데이터 베이스 RBD Relational Database 가장 많이 보편적으로 사용되고 있다.
MySQL, Oracle, MS-SQL...

MySQL의 장점
- 무료로도 사용 가능하다.
- 안정성과 효율성이 충분히 검증되어 facebook twitter linkedin 등등 많은 회사에서 사용되고 있다.
java c c++ Perl Python PHP 등 다양한 언어와 함께 많이 사용된다.

2010년 썬->Oracle이 썬을 인수하면서 MySQL이 함께 Oracle로 인수되었는데
Oracle Database를 이미 가지고 있기 때문에 많은 개발자들이 MariaDB라는 MySQL의
무료공개판을 배포하였다.

SQL Structured Query Language
관계형 데이터베이스에서 데이터를 검색/수정/삽입/삭제/갱신 하기 위한 데이터베이스 언어이다.

DDL Data Definition Language
데이터 정의 언어 CREATE DROP ALTER...

DML Data Manipulation Language
데이터 조작 언어 INSERT, DELETE, UPDATE, SELECT...

DCL Data Control Language
데이터 제어 언어 GRANT, REVOKE, COMMIT...

관계형 데이터베이스 - 관계형 데이터베이스에서는 테이블 형태로 저장하고 관리한다.
	테이블은 레코드 Record 속성 attribute으로 이루어진 2차원 배열의 형태를 가진다.
	레코드가 각 행row을 의미하고 속성 attribute은 열column에 대응된다.
	
	
일반적으로 하나의 응용프로그램은 여러개의 테이블을 필요로 한다. 관계형 데이터베이스에서는
하나의 응용서비스구현에 필요한 테이블들을 묶어 사용한다.
즉 하나의 데이터베이스에는 여러개의 테이블이 포함된다.

JDBC(java database connectivity)Java가 데이터베이스에 쉽게 접근하도록 도와준다.
JDBC를 이용하면 DBMS의 종류 (oracle, mariaDB, mysql, mssql)에 관계 없이 동일한
접근 방법을 제공받을 수 있다.

mysql-connector-java-8.0.27 // MYSQL 설치시 함께 설치된 경로에 위치하는 파일을
WEB-INF>lib에 복사한다.

1. JDBC 드라이버 로딩
2. DB접속을 위한 Connection 객체 생성
3. SQL명령문을 전달하기 위한 Statement 객체 생성
4. Statement객체를 이용하여 쿼리 실행
5. DB로부터 전송된 쿼리 실행 결과 처리
6. 사용된 객체 닫기






















